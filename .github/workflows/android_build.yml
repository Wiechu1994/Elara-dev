name: Build ElaraLite APK

on:
  push:
    branches:
      - main # Zmień na nazwę Twojej głównej gałęzi, jeśli jest inna

jobs:
  build:
    # Używamy obrazu Docker, który ma prekonfigurowane środowisko Buildozer
    # To omija problemy z ręczną instalacją 32-bitowych zależności
    container: ghcr.io/kivy/buildozer:stable

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        # Ważne: Jeśli używasz kontenera, checkout musi działać w jego kontekście
        # Domyślnie actions/checkout działa na hostcie, więc to jest poprawne.

      # Nie ma potrzeby instalowania Pythona, JDK, ani zależności systemowych,
      # ponieważ są one już w obrazie Docker.

      - name: Install Python dependencies for Buildozer
        run: |
          set -e
          # Sprawdzamy, czy pip i buildozer są dostępne w kontenerze
          python3 -m pip install --upgrade pip
          pip install cython==0.29.36 virtualenv buildozer

      - name: Build APK with Buildozer
        run: |
          set -e
          # Buildozer w kontenerze powinien już mieć skonfigurowane Android SDK i NDK
          yes | buildozer android debug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: ElaraLite-APK
          path: bin/*.apk
