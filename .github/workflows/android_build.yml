name: Build APK

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential ccache git unzip zip \
            libncurses5-dev libstdc++6 libffi-dev libssl-dev \
            zlib1g-dev libgl1-mesa-dev openjdk-17-jdk curl

      - name: Install Android SDK and Build Tools
        run: |
          mkdir -p $HOME/android-sdk/cmdline-tools
          cd $HOME/android-sdk
          curl -o sdk.zip https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip
          unzip sdk.zip -d cmdline-tools-temp
          mkdir -p cmdline-tools/latest
          mv cmdline-tools-temp/cmdline-tools/* cmdline-tools/latest/
          echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
          echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH
          yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses
          $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cython==0.29.33 virtualenv buildozer

      - name: Build APK
        run: |
          yes | buildozer android debug

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: ElaraLite-APK
          path: bin/*.apk

      - name: Send APK to Telegram
        run: |
          curl -F chat_id=7281449028 \
               -F document=@"bin/$(ls bin/*.apk | head -n 1)" \
               "https://api.telegram.org/bot7281449028:AAHG5kiX6ySMNY6Dn7lxxj214wlKbrrB1Kk/sendDocument"
